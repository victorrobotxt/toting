name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry toolchain
        uses: foundry-rs/foundry-toolchain@v1

      - name: Init Git submodules
        run: git submodule update --init --recursive

      # ─── Forge tests: unit + fuzz (skip invariants) ────────────────────────
      - name: Run unit & fuzz tests
        run: forge test --no-match-contract InvariantTests

      # ─── Forge invariants (only your InvariantTests contract) ──────────
      - name: Run invariant tests
        run: forge test --match-contract InvariantTests

      # ─── Gas reporting ───────────────────────────────────────────────────
      - name: Generate gas report
        run: forge test --gas-report > gas-report.txt

      - name: Upload gas report artifact
        uses: actions/upload-artifact@v4
        with:
          name: gas-report
          path: gas-report.txt

      - name: Generate gas snapshot diff
        uses: atarpara/foundry-snapshot-diff@v0.8
        id: gas_diff

      - name: Comment gas delta
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          delete: ${{ !steps.gas_diff.outputs.markdown }}
          message: ${{ steps.gas_diff.outputs.markdown }}

      # ─── Frontend type-check ──────────────────────────────────────────────
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: yarn --cwd packages/frontend install

      - name: Type-check frontend
        run: yarn --cwd packages/frontend type-check

      # ─── Circom compilation ──────────────────────────────────────────────
      - name: Compile Circom circuits
        run: npx -y circom2 circuits/eligibility/eligibility.circom --r1cs --wasm --sym
