name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [20, 22]
        solc: ['0.8.24', '0.8.26']
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry toolchain
        uses: foundry-rs/foundry-toolchain@v1

      - name: Init Git submodules
        run: git submodule update --init --recursive

      # ─── Forge tests: unit + fuzz (skip invariants) ────────────────────────
      - name: Run unit & fuzz tests
        run: forge test --no-match-contract InvariantTests --use ${{ matrix.solc }}

      # ─── Forge invariants (only your InvariantTests contract) ──────────
      - name: Run invariant tests
        run: forge test --match-contract InvariantTests --use ${{ matrix.solc }}

      # ─── Gas reporting ───────────────────────────────────────────────────
      - name: Generate gas report
        run: forge test --gas-report --use ${{ matrix.solc }} > gas-report.txt

      - name: Upload gas report artifact
        uses: actions/upload-artifact@v4
        with:
          name: gas-report-${{ matrix.node }}-${{ matrix.solc }}
          path: gas-report.txt

      - name: Generate gas snapshot diff
        uses: atarpara/foundry-snapshot-diff@v0.8
        id: gas_diff

      - name: Comment gas delta
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          delete: ${{ !steps.gas_diff.outputs.markdown }}
          message: ${{ steps.gas_diff.outputs.markdown }}

      # ─── Frontend type-check ──────────────────────────────────────────────
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install frontend dependencies
        run: yarn --cwd packages/frontend install

      - name: Type-check frontend
        run: yarn --cwd packages/frontend type-check

      # ─── Circom compilation ──────────────────────────────────────────────
      - name: Compile Circom circuits (multi-curve)
        run: |
          for curve in bn254 bls12-381; do
            CURVE=$curve python scripts/build_manifest.py
          done
          python scripts/check_manifest.py

      # ─── Build and scan Docker image ──────────────────────────────────────
      - name: Build Docker image
        run: docker build -t app .

      - name: Trivy scan (high severity)
        uses: aquasecurity/trivy-action@v0.19.0
        with:
          image-ref: app
          exit-code: "1"
          severity: "HIGH,CRITICAL"

      - name: Trivy scan (full report)
        uses: aquasecurity/trivy-action@v0.19.0
        with:
          image-ref: app
          format: "sarif"
          output: "trivy.sarif"
          exit-code: "0"
          severity: "LOW,MEDIUM,HIGH,CRITICAL"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

      - name: Scan for secrets
        uses: gitleaks/gitleaks-action@v2
        with:
          fail: true

  smoke:
    runs-on: ubuntu-latest
    needs: build
    services:
      anvil:
        image: ghcr.io/foundry-rs/foundry:1.0.0
        options: >-
          --health-cmd "anvil --version" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 8545:8545
        command: ["anvil","--host","0.0.0.0","-m","test test test test test test test test test test test junk","--silent"]
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
      solana:
        image: solanalabs/solana:v1.18.3
        command: ["solana-test-validator","--quiet"]
        ports:
          - 8899:8899
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - uses: foundry-rs/foundry-toolchain@v1
      - run: git submodule update --init --recursive
      - name: Install Python deps
        run: pip install web3 requests eth-account fastapi uvicorn sqlalchemy
      - name: Deploy factory
        run: |
          forge script script/DeployFactory.s.sol:DeployFactory \
            --rpc-url http://localhost:8545 \
            --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 \
            --broadcast -q
          echo "FACTORY_ADDRESS=$(jq -r '.transactions[-1].contractAddress' broadcast/DeployFactory.s.sol/31337/run-latest.json)" >> $GITHUB_ENV
      - name: Start backend
        run: |
          uvicorn packages.backend.main:app --host 0.0.0.0 --port 8000 &
          echo $! > backend.pid
          sleep 5
      - name: Run smoke test
        run: |
          BACKEND=http://localhost:8000 FACTORY_ADDRESS=$FACTORY_ADDRESS \
          python3 scripts/smoke_auth_to_mint.py
      - name: Stop backend
        run: kill $(cat backend.pid)

  coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: foundry-rs/foundry-toolchain@v1
      - name: Run forge coverage
        run: forge coverage --report lcov > coverage.lcov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.lcov

  visual:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install frontend deps
        run: yarn --cwd packages/frontend install
      - name: Build frontend
        run: yarn --cwd packages/frontend build
      - name: Percy visual regression
        uses: percy/cli-action@v1
        with:
          token: ${{ secrets.PERCY_TOKEN }}
          command: percy snapshot packages/frontend --allowed-diff-percentage=0.1

