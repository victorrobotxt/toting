# 1) Install dependencies inside a dedicated layer for caching
FROM node:20-alpine AS deps
WORKDIR /app/packages/frontend
COPY packages/frontend/package.json packages/frontend/yarn.lock ./
RUN yarn install --frozen-lockfile

# 2) Create the final image
FROM node:20-alpine AS runner
WORKDIR /app

# Copy the source code for the entire frontend application
COPY packages/frontend ./packages/frontend

# Copy the pre-installed node_modules from the 'deps' stage
COPY --from=deps /app/packages/frontend/node_modules ./packages/frontend/node_modules

WORKDIR /app/packages/frontend

ENV NODE_ENV=production
EXPOSE 3000

# The command to build and start will be specified in docker-compose.yml.
# This CMD is a fallback and will be overridden.
CMD ["sh", "-c", "yarn build && yarn start"]
